The app.use is not a route specific request so if it matches any of the routes first in the order so it will not run any other routes of the similar order, so the order is important.
HTTP methods :-
There are several http methods like get request, post request etc. Get request is the direct http method as it is displayed in url of site after slash but post request is a hidden method of calling apis so we use postman or thunder client to test apis of post request.
So as we know that the app.use function manages all the http request and the order also matters in calls so we use seperate http methods for diffrent http calls like app.get which handles all the get reqs and app.post which handles all the post reqs.
Now if u use app.use again so it will again handle all the calls if the order is diffrent.
In the route if we put a + eg "/ab+c" so the call will work if there is a a in start and c in end we can get infinite b's and if * is written so we can write anything in between.
In Express.js, req.params and req.query are used to retrieve different types of data from the incoming request URL. req.params is used to access route parameters, which are dynamic segments of the URL defined using a colon (:) in the route path. For example, in a route like /user/:id, if a client makes a request to /user/123, the value 123 can be accessed as req.params.id. On the other hand, req.query is used to access query string parameters, which appear after a ? in the URL and are in the form of key-value pairs, such as /search?name=John&age=25. These can be accessed in your route handler using req.query.name and req.query.age. Both are commonly used to pass data from the client to the server, with req.params typically used for required and specific identifiers in the URL path, and req.query used for optional filters or additional information.
