In this lecture we will make the rest of the api where we will send our request for this we will make another mongoose model so that we dont polute our user model.
In this new model we will have the fields of sendersUserID receiversUserID and the status of the request(accepted or ingnored) these all will be required fields and the status will be kept in an enum so not other fields can be sent in the request apart from the fields given by us.
We will also use a method call pre which is a midlleware which will check if our form userID and to userId is same this method will take two arguments the first will be a method like save and the other will be a function , this middleware will run everytime before you dave somethhing to the DB and is a schema level validation.
After the required modules are imported, the code defines a protected POST route /request/send/:status/:toUserID using the userAuth middleware to ensure the user is authenticated. It extracts the sender’s user ID from the auth token, and the recipient’s ID and status from the URL parameters. The route checks if the provided status is either "interested" or "ignored" and verifies that the recipient user exists in the database. It then searches for any existing connection request between the two users in either direction using the $or operator to prevent duplicates. If no existing request is found, it creates a new ConnectionRequestModel document with the sender, receiver, and status fields, saves it to MongoDB, and responds with a success message. If any validation fails or an error occurs, it sends a 400 error with the appropriate message.
You can use indexes for faster queries in the mongoDB , when you make a schema field unique it automatically creates an index.